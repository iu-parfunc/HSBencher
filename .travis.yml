# RRN: Copied from template here: https://github.com/hvr/multi-ghc-travis/blob/master/README.md#ghc-head-snapshots

# NB: don't set `language: haskell` here

# The following enables several GHC versions to be tested; often it's enough to test only against the last release in a major GHC version. Feel free to omit lines listings versions you don't need/want testing for.
env:
 # - CABALVER=1.18 GHCVER=7.8.2
 # - CABALVER=1.18 GHCVER=7.8.3
 # - CABALVER=1.18 GHCVER=7.8.4
# Using new cabal only:
 - CABALVER=1.22 GHCVER=7.8.2
 - CABALVER=1.22 GHCVER=7.8.3
 - CABALVER=1.22 GHCVER=7.8.4
 - CABALVER=1.22 GHCVER=7.10.1
 - CABALVER=head GHCVER=head

matrix:
  allow_failures:
    - env: CABALVER=head GHCVER=head

# Handle git submodules yourself
git:
    submodules: false

# Note: the distinction between `before_install` and `install` is not important.
before_install:
# No Submodules atm [2015.04.26], disabling for now:
 # Use sed to replace the SSH URL with the public URL, then initialize submodules
# - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
# - git submodule update --init

 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - CABAL=cabal NOSETUP=1 ./.jenkins_script.sh
